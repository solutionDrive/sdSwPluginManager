parameters:
  env(PLUGIN_AWS_DEFAULT_REGION): 'eu-central-1'
  env(PLUGIN_RELEASES_BUCKET): 'sd-applications-releases'
  env(PLUGIN_RELEASES_BUCKET_BASEPATH): 'releases'

services:
  sd.command.activate:
    class: sd\SwPluginManager\Command\ActivateCommand
  sd.command.deactivate:
    class: sd\SwPluginManager\Command\DeactivateCommand
  sd.command.install:
    class: sd\SwPluginManager\Command\InstallCommand
  sd.command.uninstall:
    class: sd\SwPluginManager\Command\UninstallCommand
  sd.command.info:
    class: sd\SwPluginManager\Command\InfoCommand
  sd.command.list:
    class: sd\SwPluginManager\Command\ListCommand
  sd.command.refresh:
    class: sd\SwPluginManager\Command\RefreshCommand
  sd.command.deploy_zip:
    class: sd\SwPluginManager\Command\DeployZipCommand
  sd.command.automatic_deploy:
    class: sd\SwPluginManager\Command\AutomaticDeployCommand
    arguments:
      - '@sd.repository.statefile'
      - '@sd.worker.pluginfetcher'
      - '@sd.worker.pluginextractor'
  sd.command.fetch_plugin:
    class: sd\SwPluginManager\Command\FetchPluginCommand
    arguments:
      - '@sd.repository.statefile'
      - '@sd.worker.pluginfetcher'

  sd.factory.configuredpluginstate:
    class: sd\SwPluginManager\Factory\ConfiguredPluginStateFactory
  sd.factory.deployedpluginstate:
    class: sd\SwPluginManager\Factory\DeployedPluginStateFactory
  sd.factory.s3client:
    class: sd\SwPluginManager\Factory\S3ClientFactory
    arguments:
      - '%env(PLUGIN_AWS_DEFAULT_REGION)%'

  sd.repository.deployedplugin:
    class: sd\SwPluginManager\Repository\DeployedPluginRepository
    arguments:
      - '@sd.factory.deployedpluginstate'
  sd.repository.provider:
    class: sd\SwPluginManager\Repository\ProviderRepository
  sd.repository.statefile:
    class: sd\SwPluginManager\Repository\StateFile
    arguments:
      - '@sd.factory.configuredpluginstate'

  sd.provider.filesystem:
    class: sd\SwPluginManager\Provider\FilesystemProvider
    tags: ['sd.plugin.provider']
  sd.provider.none:
    class: sd\SwPluginManager\Provider\NoneProvider
    tags: ['sd.plugin.provider']
  sd.provider.http:
    class: sd\SwPluginManager\Provider\HttpProvider
    tags: ['sd.plugin.provider']
    arguments:
      - '@sd.external.guzzle'
  sd.provider.s3:
    class: sd\SwPluginManager\Provider\S3Provider
    tags: ['sd.plugin.provider']
    arguments:
      - '@sd.factory.s3client'
      - '%env(PLUGIN_RELEASES_BUCKET)%'
      - '%env(PLUGIN_RELEASES_BUCKET_BASEPATH)%'
  sd.provider.store_api:
    class: sd\SwPluginManager\Provider\StoreApiProvider
    tags: ['sd.plugin.provider']
    arguments:
      - '@sd.service.store_api_connector'

  sd.service.store_api_connector:
    class: sd\SwPluginManager\Service\StoreApiConnector
    arguments:
      - '@sd.external.guzzle'
      - '@sd.service.stream_translator'
      - '/tmp'

  sd.service.stream_translator:
    class: sd\SwPluginManager\Service\StreamTranslator

  sd.worker.pluginfetcher:
    class: sd\SwPluginManager\Worker\PluginFetcher
    arguments:
      - '@sd.repository.provider'

  sd.worker.pluginextractor:
    class: sd\SwPluginManager\Worker\PluginExtractor

  sd.external.guzzle:
    class: GuzzleHttp\Client
